<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAIAAKBAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAAgAAAAIAgGAAAAc3p69AAAAAFz
        UkdCAK7OHOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAADn0lEQVRYR+2W60+T
        VxjA98/skiX7uA9mW1yiJEQmkQ4L5e64VKC2zBakpjgcdIs6uS34wZmM0C8O5zYHEzakyG1SNQO0KEVK
        C6UtSCu3FnC0/e3t0aHZvmwB5Et/aXPOed7nPP3lPU/79jV2mZhATCAmEBMQAl73DHf+GMLj8YjgP3nw
        wEr4+Xy7EQLmjp+5cPEipaUnuNbayujofX64+h2tbb/QdOkb6hobudJyhQtf17MSXBcbtwshcHfATKm+
        ApUyF+O5BurPGZGnZqJU5tNQe57D6dkcTEhAkZzIuNMrNm4XQsDjcvJbZze/D/TT3tGJdWQIc1e3dDfa
        udXfzaUmEy0tLfSYb7CyugN3YDf5l8C4bYxw5PniFSAE5j3T6A2nqGtopFynofKzSh77l0TCTiME+s0d
        KFIVpB9R0tzUxGlDKb2DQyJhpxECgSU/JVotFsttbDYb9+8NEwiuiYSdRghEwhuYe3pF4FWz2YR9fZLA
        S83Xc7NbrCORiLgWHaXXJisry2KMxqPcGhyU5mGGR0Z44vc/i1kGxfhy7Wj+7cEB5nwLYi0EXI5x0jMy
        KC46yvmaOgry8yhSf4pWV0ZVVRWHkmR8f9nEqQoDGo2GQo2OX9t+ZN/+OI5rdehPlFFtrEJVXESZ3sBJ
        fRk1tfUYDHo0x3XIDqdI+9TSL2ktJZoScj/JoavP8kLA0tdF/IF4CovVvPHm29ScMZKZlYPs42TS0hS8
        u+c9jNWfo1YVkixPJT+/gN7uTj784H0SPjrA6S+/Qqc+KuUnIU9RkJGeyetvvYNee4xi1TH27osjKSmZ
        uL17KChQSjly+izDLwT+fLqGbfwRLtcMdrudJz4fbo9XWrt4+HCMUasV+4QNh3OK2bnHLPjnWFwO4PV6
        cEj50y43Hrcb14yb2dl55mbnRB2nfYKFxWWs1lFRy+lw4JicwDk1xUbo2eNtswf+K3+f+XYhBHyzM1zv
        vCkC4XCYZpMJ7/Qk5RWVmx8YCm1I7xBT9jEeOWaiJlLu1mWEwB3pgSNPSUGhSKOtrY2E+P2cPXOWQ6lZ
        XG25jOFkmXR2eeTn5XIwMRGZTCadcxrX2rtEka0gBObdkxSq1MjTMgltbFCuVZGdlS2tj3Dv7oA0z6G6
        qppvm02i8bIyMzAav+Cn6zdEka0gBCLhkPS9DhAIBEVwdTWI3+dncWFJXFtbW5fmi6yvr4l/TYHgqtS4
        T0XuVvnfTbjdxAR2WQD+AtH2DhUCpza5AAAAAElFTkSuQmCC
</value>
  </data>
</root>